<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.tiny</groupId>
    <artifactId>tiny_project</artifactId>
    <version>1.0.0</version>
  </parent>
	<artifactId>tiny_web</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>tiny_web</name>
	<description>Case for Spring Boot single web project</description>
	<dependencies>
		<!-- 用于业务系统 ORM -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- 用于授权服务器 JDBC 组件 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<!-- 授权服务器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-authorization-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-cas</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>

		<!-- 资源服务器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<!-- 核心安全支持 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.4.0</version>
		</dependency>

		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web-starter</artifactId>
			<version>0.29.1</version>
		</dependency>
		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

<!--			<plugin>-->
<!--				<groupId>org.jacoco</groupId>-->
<!--				<artifactId>jacoco-maven-plugin</artifactId>-->
<!--				<version>0.8.11</version> &lt;!&ndash; 最新稳定版本 &ndash;&gt;-->
<!--				<configuration>-->
<!--					<dataFile>${project.build.directory}/jacoco.exec</dataFile>&lt;!&ndash; 覆盖率数据存储位置 &ndash;&gt;-->
<!--					<skip>false</skip>&lt;!&ndash; 不跳过 JaCoCo 执行 &ndash;&gt;-->
<!--					<output>file</output>&lt;!&ndash; 输出为文件（默认） &ndash;&gt;-->
<!--					<append>true</append>&lt;!&ndash; 允许多次测试将数据追加到同一文件 &ndash;&gt;-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>default-instrument</id>-->
<!--						<goals>-->
<!--							<goal>instrument</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>default-restore-instrumented-classes</id>-->
<!--						<phase>test</phase>-->
<!--						<goals>-->
<!--							<goal>restore-instrumented-classes</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>default-report</id>-->
<!--						<phase>test</phase>-->
<!--						<goals>-->
<!--							<goal>report</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->


			<!-- ✅ JaCoCo 插件 -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<!-- ✅ 在 test 前注入 Java Agent -->
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>

					<!-- ✅ 在 verify 阶段生成 HTML/XML 报告 -->
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jacoco-report</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- ✅ Surefire 插件（运行测试） -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.3.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<systemPropertyVariables>
						<jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
